{"version":3,"sources":["components/UserList.js","components/ProjectList.js","components/ToDoList.js","components/ProjectToDo.js","components/LoginForm.js","components/ProjectForm.js","components/ToDoForm.js","components/Menu.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","username","first_name","last_name","email","UserList","users","border","map","ProjectItem","project","delete_project","to","id","name","repository_link","onClick","type","ProjectList","projects","ToDoItem","todo","delete_todo","project_name","text","created","updated","is_done","ToDoList","todos","ProjectToDo","useParams","filteredTodos","filter","LoginForm","prop","state","event","this","setState","target","value","props","get_token","login","password","preventDefault","onSubmit","handleSubmit","placeholder","onChange","handleChange","React","Component","ProjectForm","selectedOptions","i","length","push","parseInt","item","create_project","multiple","handleUsersChange","TodoForm","create_todo","Menu","today","Date","Footer","getFullYear","NotFound","location","useLocation","pathname","App","axios","post","then","response","token","data","localStorage","setItem","get_data","catch","error","console","log","getItem","is_auth","headers","get_headers","get","delete","logout","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGMA,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACA,+BACI,6BAAKA,EAAKC,WACV,6BAAKD,EAAKE,aACV,6BAAKF,EAAKG,YACV,6BAAKH,EAAKI,YAyBHC,EApBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACI,wBAAOC,OAAO,IAAd,UACI,0CAGA,4CAGA,2CAGA,wCAGCD,EAAME,KAAI,SAACR,GAAD,OAAU,cAAC,EAAD,CAAUA,KAAMA,WCzB3CS,EAAc,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eAC3B,OACA,+BACI,+BAAI,cAAC,IAAD,CAAMC,GAAE,oBAAeF,EAAQG,IAA/B,SAAsCH,EAAQI,OAAlD,OACA,6BAAKJ,EAAQK,kBACb,6BAAKL,EAAQJ,MAAQ,KACrB,6BAAI,wBAAQU,QAAS,kBAAIL,EAAeD,EAAQG,KAAKI,KAAK,SAAtD,0BAyBGC,EApBK,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,SAAUR,EAAoB,EAApBA,eAC5B,OACI,wBAAOJ,OAAO,IAAd,UACI,sCAGA,iDAGA,uCAGA,wCAGCY,EAASX,KAAI,SAACE,GAAD,OAAa,cAAC,EAAD,CAAaA,QAASA,EAASC,eAAgBA,WC3BhFS,EAAW,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YACrB,OACA,+BACI,6BAAKD,EAAKE,eACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,UACV,6BAAKJ,EAAKK,UACV,6BAAKL,EAAKrB,OACV,6BAAKqB,EAAKM,UACV,6BAAI,wBAAQX,QAAS,kBAAIM,EAAYD,EAAKR,KAAKI,KAAK,SAAhD,0BA+BGW,EA1BE,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOP,EAAiB,EAAjBA,YACtB,OACI,wBAAOf,OAAO,IAAd,UACI,8CAGA,sCAGA,yCAGA,yCAGA,sCAGA,yCAGCsB,EAAMrB,KAAI,SAACa,GAAD,OAAU,cAAC,EAAD,CAAUA,KAAMA,EAAMC,YAAaA,WCnC9DF,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACA,+BACI,6BAAKA,EAAKE,eACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,UACV,6BAAKJ,EAAKK,UACV,6BAAKL,EAAKrB,OACV,6BAAKqB,EAAKM,cAoCHG,EA/BK,SAAC,GAAa,IAAZD,EAAW,EAAXA,MACZhB,EAAOkB,cAAPlB,GAGFmB,EAAgBH,EAAMI,QAAO,SAACZ,GAAD,OAAUA,EAAKE,cAAgBV,KAEhE,OACI,kCACI,8CAGA,sCAGA,yCAGA,yCAGA,sCAGA,yCAGCmB,EAAcxB,KAAI,SAACa,GAAD,OAAU,cAAC,EAAD,CAAUA,KAAMA,W,QCP1Ca,E,kDAhCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,MAAS,GACT,SAAY,IAJF,E,gDAQlB,SAAaC,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAO1B,KAAOuB,EAAMG,OAAOC,U,0BAI1C,SAAaJ,GACTC,KAAKI,MAAMC,UAAUL,KAAKF,MAAMQ,MAAON,KAAKF,MAAMS,UAClDR,EAAMS,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,IAA7C,UACI,uBAAOpB,KAAK,OAAOH,KAAK,QAAQmC,YAAY,QAAQR,MAAOH,KAAKF,MAAMQ,MAClEM,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC3C,uBAAOpB,KAAK,WAAWH,KAAK,WAAWmC,YAAY,WAAWR,MAAOH,KAAKF,MAAMS,SAC5EK,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC3C,uBAAOpB,KAAK,SAASwB,MAAM,iB,GA3BnBW,IAAMC,WCkDfC,E,kDAjDX,WAAYnB,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,KAAQ,GACR,gBAAmB,GACnB,MAAS,IALC,E,gDASlB,SAAaC,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAO1B,KAAOuB,EAAMG,OAAOC,U,+BAI1C,SAAkBJ,GACd,GAAKA,EAAMG,OAAOe,gBAAlB,CAIA,IADA,IAAIjD,EAAQ,GACHkD,EAAE,EAAGA,EAAEnB,EAAMG,OAAOe,gBAAgBE,OAAQD,IACjDlD,EAAMoD,KAAKC,SAAStB,EAAMG,OAAOe,gBAAgBK,KAAKJ,GAAGf,QAE7DH,KAAKC,SAAS,CACV,MAASjC,O,0BAIjB,SAAa+B,GACTC,KAAKI,MAAMmB,eAAevB,KAAKF,MAAMtB,KAAMwB,KAAKF,MAAMrB,gBAAiBuB,KAAKF,MAAM9B,OAClF+B,EAAMS,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,IAA7C,UACI,uBAAOpB,KAAK,OAAOH,KAAK,OAAOmC,YAAY,OAAOR,MAAOH,KAAKF,MAAMtB,KAChEoC,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC3C,uBAAOpB,KAAK,MAAMH,KAAK,kBAAkBmC,YAAY,kBAAkBR,MAAOH,KAAKF,MAAMrB,gBACrFmC,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC3C,wBAAQyB,UAAQ,EAAChD,KAAK,QAAQoC,SAAU,SAACb,GAAD,OAAW,EAAK0B,kBAAkB1B,IAA1E,SACKC,KAAKI,MAAMpC,MAAME,KAAI,SAACR,GAAD,OAAU,yBAAQyC,MAAOzC,EAAKa,GAApB,UAAyBb,EAAKE,WAA9B,IAA2CF,EAAKG,kBAEpF,uBAAOc,KAAK,SAASwB,MAAM,kB,GA5CjBW,IAAMC,WCuCjBW,E,kDAtCX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDN,MAAQ,CACT1B,QAAS,GACTc,KAAM,GACNxB,KAAM,IALK,E,gDASnB,SAAaqC,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAO1B,KAAOuB,EAAMG,OAAOC,U,0BAI1C,SAAaJ,GACTC,KAAKI,MAAMuB,YAAY3B,KAAKF,MAAM1B,QAAS4B,KAAKF,MAAMZ,KAAMc,KAAKF,MAAMpC,MACvEqC,EAAMS,mB,oBAGV,WAAU,IAAD,OACL,OACI,uBAAMC,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,IAA7C,UAEI,wBAAQvB,KAAK,UAAUoC,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,IAA9D,SACKC,KAAKI,MAAMhC,QAAQF,KAAI,SAACE,GAAD,OAAa,wBAAQ+B,MAAO/B,EAAQG,GAAvB,SAA4BH,EAAQI,YAE7E,uBAAOG,KAAK,OAAOH,KAAK,OAAOmC,YAAY,OAAOR,MAAOH,KAAKF,MAAMZ,KAChE0B,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,MAC3C,wBAAQvB,KAAK,OAAOoC,SAAU,SAACb,GAAD,OAAW,EAAKc,aAAad,IAA3D,SACKC,KAAKI,MAAM1C,KAAKQ,KAAI,SAACR,GAAD,OAAU,yBAAQyC,MAAOzC,EAAKa,GAApB,UAAyBb,EAAKE,WAA9B,IAA2CF,EAAKG,kBAEnF,uBAAOc,KAAK,SAASwB,MAAM,kB,GAjCpBW,IAAMC,WCada,EAZF,WACT,OACI,8BACI,+BACI,+BAAI,cAAC,IAAD,CAAMtD,GAAG,IAAT,mBAAJ,OACA,+BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,sBAAJ,OACA,+BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,mBAAJ,aCPVuD,EAAQ,IAAIC,KASHC,EARA,WACX,OACI,iDACqBF,EAAMG,cAD3B,gB,gBCSFC,EAAW,WACb,IAAIC,EAAWC,cACf,OACI,wCAAU,4BAAID,EAASE,WAAvB,iBA6MOC,E,kDAxMX,WAAYxC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT,MAAS,GACT,SAAY,GACZ,MAAS,IALC,E,6CAWlB,SAAUQ,EAAOC,GAAW,IAAD,OACvB+B,IACCC,KAAK,wCAAyC,CAAC,SAAYjC,EAAO,SAAYC,IAC9EiC,MAAK,SAAAC,GACF,IAAMC,EAAQD,EAASE,KAAKD,MAG5BE,aAAaC,QAAQ,QAASH,GAC9BE,aAAaC,QAAQ,OAAQvC,GAC7B,EAAKL,SAAS,CACV,MAASyC,EAAO,KAAQpC,GACzB,EAAKwC,aAEXC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,oBAGhC,WACIJ,aAAaC,QAAQ,QAAS,IAC9BD,aAAaC,QAAQ,OAAQ,IAC7B7C,KAAKC,SAAS,CACV,MAAS,GACT,KAAQ,IACTD,KAAK8C,Y,+BAGZ,WACI,IAAIJ,EAAQE,aAAaO,QAAQ,SACjCnD,KAAKC,SAAS,CACV,MAASyC,GACV1C,KAAK8C,Y,qBAGZ,WACI,QAAS9C,KAAKF,MAAM4C,Q,yBAGxB,WACI,OAAI1C,KAAKoD,UACE,CACH,cAAiB,SAAWpD,KAAKF,MAAM4C,OAGxC,K,sBAGX,WAAW,IAAD,OACFW,EAAUrD,KAAKsD,cACnBhB,IACCiB,IAAI,mCAAoC,CAACF,YACzCb,MAAK,SAAAC,GACF,IAAMzE,EAAQyE,EAASE,KACvB,EAAK1C,SAAS,CACV,MAASjC,OAGhB+E,OAAM,SAAAC,GACH,EAAK/C,SAAS,CACV,MAAS,KAEbgD,QAAQC,IAAIF,MAGhBV,IACCiB,IAAI,sCAAuC,CAACF,YAC5Cb,MAAK,SAAAC,GACF,IAAM5D,EAAW4D,EAASE,KAC1B,EAAK1C,SAAS,CACV,SAAYpB,OAGnBkE,OAAM,SAAAC,GACH,EAAK/C,SAAS,CACV,SAAY,KAEhBgD,QAAQC,IAAIF,MAGhBV,IACCiB,IAAI,mCAAoC,CAACF,YACzCb,MAAK,SAAAC,GACF,IAAMlD,EAAQkD,EAASE,KACvB,EAAK1C,SAAS,CACV,MAASV,OAGhBwD,OAAM,SAAAC,GACH,EAAK/C,SAAS,CACV,MAAS,KAEbgD,QAAQC,IAAIF,Q,4BAGhB,SAAexE,EAAMC,EAAiBT,GAAQ,IAAD,OAErCqF,EAAUrD,KAAKsD,cACnBhB,IACCC,KAAK,sCAAuC,CAAC,KAAQ/D,EAAM,gBAAmBC,EAAiB,MAAST,GAAQ,CAACqF,YACjHb,MAAK,SAAAC,GACF,EAAKK,cAERC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,4BAIpB,SAAezE,GAAK,IAAD,OACX8E,EAAUrD,KAAKsD,cACnBhB,IACCkB,OADD,6CAC8CjF,GAAM,CAAC8E,YACpDb,MAAK,SAAAC,GACF,EAAKxC,SAAS,CACV,SAAY,EAAKH,MAAMjB,SAASc,QAAO,SAACvB,GAAD,OAAaA,EAAQG,KAAOA,UAG1EwE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,yBAIpB,SAAYzE,GAAK,IAAD,OACR8E,EAAUrD,KAAKsD,cACnBhB,IACCkB,OADD,0CAC2CjF,GAAM,CAAC8E,YACjDb,MAAK,SAAAC,GAEF,EAAKxC,SAAS,CACV,MAAS,EAAKH,MAAMP,MAAMI,QAAO,SAACZ,GAAD,OAAUA,EAAKR,KAAOA,UAG9DiE,MAAK,SAAAC,GACF,EAAKK,cAERC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,yBAIpB,SAAY5E,EAASc,EAAMxB,GAAO,IAAD,OACzB2F,EAAUrD,KAAKsD,cACnBhB,IACCC,KAAK,mCAAoC,CAAC,aAAgBnE,EAAS,KAAQc,EAAM,KAAQxB,GAAO,CAAC2F,YACjGb,MAAK,SAAAC,GACF,EAAKK,cAERC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,oBAIpB,WAAW,IAAD,OACV,OACI,8BACI,eAAC,IAAD,WACI,gCAAK,cAAC,EAAD,IACD,+BACKhD,KAAKoD,WAAa,6BAAI,cAAC,IAAD,CAAM9E,GAAG,mBAAT,8BACtB0B,KAAKoD,WAAa,+BAAI,cAAC,IAAD,CAAM9E,GAAG,gBAAT,wBAAJ,OAClB0B,KAAKoD,WAAa,2GAAiB,4BAAIR,aAAaO,QAAQ,aAC7D,6BACKnD,KAAKoD,UAAY,wBAAQ1E,QAAS,kBAAM,EAAK+E,UAA5B,qBACN,cAAC,IAAD,CAAMnF,GAAG,SAAT,2BAIxB,8BACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAU5F,MAAOgC,KAAKF,MAAM9B,UAC3D,cAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,YAAYC,QAC1B,cAAC,EAAD,CAAa/E,SAAUmB,KAAKF,MAAMjB,SAAUR,eAAgB,SAACE,GAAD,OAAQ,EAAKF,eAAeE,QAC5F,cAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,mBACXC,QAAS,cAAC,EAAD,CAAa5F,MAAOgC,KAAKF,MAAM9B,MAAOuD,eAAgB,SAAC/C,EAAMC,EAAiBT,GAAxB,OAAkC,EAAKuD,eAAe/C,EAAMC,EAAiBT,QACnJ,cAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,SAASC,QACvB,cAAC,EAAD,CAAUrE,MAAOS,KAAKF,MAAMP,MAAOP,YAAa,SAACT,GAAD,OAAQ,EAAKS,YAAYT,QAC7E,cAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,gBACXC,QAAS,cAAC,EAAD,CAAUlG,KAAMsC,KAAKF,MAAM9B,MAAOI,QAAS4B,KAAKF,MAAMjB,SAC5C8C,YAAa,SAACvD,EAASc,EAAMxB,GAAhB,OAAyB,EAAKiE,YAAYvD,EAASc,EAAMxB,QAChG,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,SAASC,QACtB,cAAC,EAAD,CAAWvD,UAAW,SAACC,EAAOC,GAAR,OAAqB,EAAKF,UAAUC,EAAOC,QACtE,cAAC,IAAD,CAAOoD,KAAK,SAASC,QAAS,cAAC,IAAD,CAAUtF,GAAG,QAC3C,cAAC,IAAD,CAAOqF,KAAK,gBAAgBC,QAAS,cAAC,EAAD,CAAarE,MAAOS,KAAKF,MAAMP,UACpE,cAAC,IAAD,CAAOoE,KAAK,IAAIC,QAAS,cAAC,EAAD,WAG7B,8BAAK,cAAC,EAAD,e,GAnMP9C,IAAMC,WCTT8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be242bf4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst UserItem = ({user}) => {\r\n    return (\r\n    <tr>\r\n        <td>{user.username}</td>\r\n        <td>{user.first_name}</td>\r\n        <td>{user.last_name}</td>\r\n        <td>{user.email}</td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nconst UserList = ({users}) => {\r\n    return (\r\n        <table border=\"1\">\r\n            <th>\r\n                Username\r\n            </th>\r\n            <th>\r\n                First name\r\n            </th>\r\n            <th>\r\n                Last name\r\n            </th>\r\n            <th>\r\n                E-mail\r\n            </th>\r\n            {users.map((user) => <UserItem user={user} />) }\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst ProjectItem = ({project, delete_project}) => {\r\n    return (\r\n    <tr>\r\n        <td><Link to={`/projects/${project.id}`}>{project.name}</Link> </td>\r\n        <td>{project.repository_link}</td>\r\n        <td>{project.users + ''}</td>\r\n        <td><button onClick={()=>delete_project(project.id)} type='button'>Delete</button></td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nconst ProjectList = ({projects, delete_project}) => {\r\n    return (\r\n        <table border=\"1\" >\r\n            <th>\r\n                Name\r\n            </th>\r\n            <th>\r\n                Repository link\r\n            </th>\r\n            <th>\r\n                Users\r\n            </th>\r\n            <th>\r\n                Delete\r\n            </th>\r\n            {projects.map((project) => <ProjectItem project={project} delete_project={delete_project}/>) }\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from 'react'\r\n\r\n\r\nconst ToDoItem = ({todo, delete_todo}) => {\r\n    return (\r\n    <tr>\r\n        <td>{todo.project_name}</td>\r\n        <td>{todo.text}</td>\r\n        <td>{todo.created}</td>\r\n        <td>{todo.updated}</td>\r\n        <td>{todo.user}</td>\r\n        <td>{todo.is_done}</td>\r\n        <td><button onClick={()=>delete_todo(todo.id)} type='button'>Delete</button></td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nconst ToDoList = ({todos, delete_todo}) => {\r\n    return (\r\n        <table border=\"1\" >\r\n            <th>\r\n                Project name\r\n            </th>\r\n            <th>\r\n                Text\r\n            </th>\r\n            <th>\r\n                Created\r\n            </th>\r\n            <th>\r\n                Updated\r\n            </th>\r\n            <th>\r\n                User\r\n            </th>\r\n            <th>\r\n                Is done\r\n            </th>\r\n            {todos.map((todo) => <ToDoItem todo={todo} delete_todo={delete_todo}/>) }\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ToDoList;\r\n","import {useParams} from 'react-router-dom'\r\n\r\n\r\nconst ToDoItem = ({todo}) => {\r\n    return (\r\n    <tr>\r\n        <td>{todo.project_name}</td>\r\n        <td>{todo.text}</td>\r\n        <td>{todo.created}</td>\r\n        <td>{todo.updated}</td>\r\n        <td>{todo.user}</td>\r\n        <td>{todo.is_done}</td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nconst ProjectToDo = ({todos}) => {\r\n    let { id } = useParams();\r\n    // перестал работать todo.project_name.includes(parseInt(id)))\r\n    // let filteredTodos = todos.filter((todo) => todo.project_name.includes(parseInt(id)))\r\n    let filteredTodos = todos.filter((todo) => todo.project_name == id)\r\n\r\n    return (\r\n        <table>\r\n            <th>\r\n                Project name\r\n            </th>\r\n            <th>\r\n                Text\r\n            </th>\r\n            <th>\r\n                Created\r\n            </th>\r\n            <th>\r\n                Updated\r\n            </th>\r\n            <th>\r\n                User\r\n            </th>\r\n            <th>\r\n                Is done\r\n            </th>\r\n            {filteredTodos.map((todo) => <ToDoItem todo={todo} />)}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ProjectToDo;","import React from 'react'\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(prop) {\r\n        super(prop)\r\n        this.state = {\r\n            'login': '',\r\n            'password': ''\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.get_token(this.state.login, this.state.password)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)} >\r\n                <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\r\n                    onChange={(event) => this.handleChange(event)}/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\r\n                    onChange={(event) => this.handleChange(event)}/>\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(prop) {\r\n        super(prop)\r\n        this.state = {\r\n            'name': '',\r\n            'repository_link': '',\r\n            'users': []\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUsersChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n            return;\r\n        }\r\n        let users = []\r\n        for (let i=0; i<event.target.selectedOptions.length; i++) {\r\n            users.push(parseInt(event.target.selectedOptions.item(i).value))\r\n        }\r\n        this.setState({\r\n            'users': users\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.create_project(this.state.name, this.state.repository_link, this.state.users)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)} >\r\n                <input type=\"text\" name=\"name\" placeholder=\"name\" value={this.state.name}\r\n                    onChange={(event) => this.handleChange(event)}/>\r\n                <input type=\"url\" name=\"repository_link\" placeholder=\"repository link\" value={this.state.repository_link}\r\n                    onChange={(event) => this.handleChange(event)}/>\r\n                <select multiple name=\"users\" onChange={(event) => this.handleUsersChange(event)}>\r\n                    {this.props.users.map((user) => <option value={user.id}>{user.first_name} {user.last_name}</option>)}\r\n                </select>\r\n                <input type=\"submit\" value=\"Create\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectForm;\r\n","import React from 'react'\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            project: '',\r\n            text: '',\r\n            user: '',\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.create_todo(this.state.project, this.state.text, this.state.user)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)} >\r\n\r\n                <select name=\"project\" onChange={(event) => this.handleChange(event)}>\r\n                    {this.props.project.map((project) => <option value={project.id}>{project.name}</option>)}\r\n                </select>\r\n                <input type=\"text\" name=\"text\" placeholder=\"text\" value={this.state.text}\r\n                    onChange={(event) => this.handleChange(event)}/>\r\n                <select name=\"user\" onChange={(event) => this.handleChange(event)}>\r\n                    {this.props.user.map((user) => <option value={user.id}>{user.first_name} {user.last_name}</option>)}\r\n                </select>\r\n                <input type=\"submit\" value=\"Create\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li><Link to=\"/\">Users</Link> </li>\r\n                <li><Link to=\"/projects\">Projects</Link> </li>\r\n                <li><Link to=\"/todos\">ToDos</Link> </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react'\r\n\r\nconst today = new Date();\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            Copyring &copy; {today.getFullYear()} orbich67\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {BrowserRouter, Link, Navigate, Route, Routes, useLocation} from 'react-router-dom'\r\nimport UserList from './components/UserList.js'\r\nimport ProjectList from './components/ProjectList.js'\r\nimport ToDoList from './components/ToDoList.js'\r\nimport ProjectToDo from './components/ProjectToDo.js'\r\nimport LoginForm from './components/LoginForm.js'\r\nimport ProjectForm from './components/ProjectForm.js'\r\nimport TodoForm from './components/ToDoForm.js'\r\nimport Menu from './components/Menu.js'\r\nimport Footer from './components/Footer.js'\r\nimport axios from 'axios'\r\n\r\n\r\nconst NotFound = () => {\r\n    let location = useLocation()\r\n    return (\r\n        <div>Page <b>{location.pathname}</b> not found</div>\r\n    )\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(prop) {\r\n        super(prop)\r\n        this.state = {\r\n            'users': [],\r\n            'projects': [],\r\n            'todos': [],\r\n            // 'token': '',\r\n            // 'user': ''\r\n        }\r\n    }\r\n\r\n    get_token(login, password) {\r\n        axios\r\n        .post('http://127.0.0.1:8080/api-token-auth/', {\"username\": login, \"password\": password})\r\n        .then(response => {\r\n            const token = response.data.token\r\n\r\n            // console.log(token)\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('user', login)\r\n            this.setState({\r\n                'token': token, 'user': login\r\n            }, this.get_data)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    logout() {\r\n        localStorage.setItem('token', '')\r\n        localStorage.setItem('user', '')\r\n        this.setState({\r\n            'token': '',\r\n            'user': ''\r\n        }, this.get_data)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('token')\r\n        this.setState({\r\n            'token': token\r\n        }, this.get_data)\r\n    }\r\n\r\n    is_auth(){\r\n        return !!this.state.token\r\n    }\r\n\r\n    get_headers() {\r\n        if (this.is_auth()) {\r\n            return {\r\n                'Authorization': 'Token ' + this.state.token\r\n            }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    get_data(){\r\n        let headers = this.get_headers()\r\n        axios\r\n        .get('http://127.0.0.1:8080/api/users/', {headers})\r\n        .then(response => {\r\n            const users = response.data\r\n            this.setState({\r\n                'users': users\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                'users': []\r\n            })\r\n            console.log(error)\r\n        })\r\n\r\n        axios\r\n        .get('http://127.0.0.1:8080/api/projects/', {headers})\r\n        .then(response => {\r\n            const projects = response.data\r\n            this.setState({\r\n                'projects': projects\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                'projects': []\r\n            })\r\n            console.log(error)\r\n        })\r\n\r\n        axios\r\n        .get('http://127.0.0.1:8080/api/todos/', {headers})\r\n        .then(response => {\r\n            const todos = response.data\r\n            this.setState({\r\n                'todos': todos\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                'todos': []\r\n            })\r\n            console.log(error)\r\n        })\r\n    }\r\n        create_project(name, repository_link, users) {\r\n            // console.log(name, repository_link, users)\r\n            let headers = this.get_headers()\r\n            axios\r\n            .post(\"http://127.0.0.1:8080/api/projects/\", {'name': name, 'repository_link': repository_link, 'users': users}, {headers})\r\n            .then(response => {\r\n                this.get_data();\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n        delete_project(id) {\r\n            let headers = this.get_headers()\r\n            axios\r\n            .delete(`http://127.0.0.1:8080/api/projects/${id}`, {headers})\r\n            .then(response => {\r\n                this.setState({\r\n                    'projects': this.state.projects.filter((project) => project.id !== id)\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n        })\r\n        }\r\n\r\n        delete_todo(id) {\r\n            let headers = this.get_headers()\r\n            axios\r\n            .delete(`http://127.0.0.1:8080/api/todos/${id}`, {headers})\r\n            .then(response => {\r\n                // const users = response.data\r\n                this.setState({\r\n                    'todos': this.state.todos.filter((todo) => todo.id !== id)\r\n                })\r\n            })\r\n            .then(response => {\r\n                this.get_data();\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n        })\r\n        }\r\n\r\n        create_todo(project, text, user) {\r\n            let headers = this.get_headers()\r\n            axios\r\n            .post(\"http://127.0.0.1:8080/api/todos/\", {'project_name': project, 'text': text, 'user': user}, {headers})\r\n            .then(response => {\r\n                this.get_data();\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n        render () {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <div><Menu />\r\n                        <ul>\r\n                            {this.is_auth() && <li><Link to=\"/projects/create\">Projects (new)</Link></li>}\r\n                            {this.is_auth() && <li><Link to=\"/todos/create\">ToDo (new)</Link> </li>}\r\n                            {this.is_auth() && <p>Пользователь: <b>{localStorage.getItem('user')}</b></p>}\r\n                            <li>\r\n                                {this.is_auth() ? <button onClick={() => this.logout()}> Logout\r\n                                </button> : <Link to=\"/login\">Login</Link>}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                    <Routes>\r\n                        <Route exact path='/' element={<UserList users={this.state.users} /> } />\r\n                        <Route exact path='/projects' element={\r\n                            <ProjectList projects={this.state.projects} delete_project={(id) => this.delete_project(id)}/> } />\r\n                        <Route exact path='/projects/create'\r\n                               element={<ProjectForm users={this.state.users} create_project={(name, repository_link, users) => this.create_project(name, repository_link, users)} /> } />\r\n                        <Route exact path='/todos' element={\r\n                            <ToDoList todos={this.state.todos} delete_todo={(id) => this.delete_todo(id)}/> } />\r\n                        <Route exact path='/todos/create'\r\n                               element={<TodoForm user={this.state.users} project={this.state.projects}\r\n                                                  create_todo={(project, text, user) => this.create_todo(project, text, user)} /> } />\r\n                        <Route exact path='/login' element=\r\n                            {<LoginForm get_token={(login, password) => this.get_token(login, password)}/> } />\r\n                        <Route path=\"/users\" element={<Navigate to=\"/\"/>} />\r\n                        <Route path='/projects/:id' element={<ProjectToDo todos={this.state.todos} /> } />\r\n                        <Route path=\"*\" element={<NotFound /> } />\r\n                    </Routes>\r\n                    </div>\r\n                    <div><Footer /></div>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}