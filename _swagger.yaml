swagger: '2.0'
info:
  title: drf_project
  description: ''
  contact:
    email: info@test.ru
  license:
    name: MIT
  version: v1
host: 127.0.0.1:8080
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /api-token-auth/:
    post:
      operationId: api-token-auth_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthToken'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AuthToken'
      tags:
        - api-token-auth
    parameters: []
  /api/projects/:
    get:
      operationId: api_projects_list
      description: ''
      parameters:
        - name: name
          in: query
          description: ''
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
      tags:
        - api
    post:
      operationId: api_projects_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Project'
      tags:
        - api
    parameters: []
  /api/projects/{id}/:
    get:
      operationId: api_projects_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Project'
      tags:
        - api
    put:
      operationId: api_projects_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Project'
      tags:
        - api
    patch:
      operationId: api_projects_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Project'
      tags:
        - api
    delete:
      operationId: api_projects_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this project.
        required: true
        type: integer
  /api/todos/:
    get:
      operationId: api_todos_list
      description: ''
      parameters:
        - name: project_name
          in: query
          description: ''
          required: false
          type: string
        - name: min_created
          in: query
          description: ''
          required: false
          type: string
        - name: max_created
          in: query
          description: ''
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ToDo'
      tags:
        - api
    post:
      operationId: api_todos_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ToDo'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ToDo'
      tags:
        - api
    parameters: []
  /api/todos/{id}/:
    get:
      operationId: api_todos_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ToDo'
      tags:
        - api
    put:
      operationId: api_todos_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ToDo'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ToDo'
      tags:
        - api
    patch:
      operationId: api_todos_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ToDo'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ToDo'
      tags:
        - api
    delete:
      operationId: api_todos_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this to do.
        required: true
        type: integer
  /api/users/:
    get:
      operationId: api_users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - api
    parameters: []
  /api/users/{id}/:
    get:
      operationId: api_users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - api
    put:
      operationId: api_users_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - api
    patch:
      operationId: api_users_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        required: true
        type: integer
definitions:
  AuthToken:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\
          \u0442\u0435\u043B\u044F"
        type: string
        minLength: 1
      password:
        title: "\u041F\u0430\u0440\u043E\u043B\u044C"
        type: string
        minLength: 1
      token:
        title: "\u0422\u043E\u043A\u0435\u043D"
        type: string
        readOnly: true
        minLength: 1
  Project:
    required:
      - name
      - users
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\
          \u0435\u043A\u0442\u0430"
        type: string
        maxLength: 64
        minLength: 1
      repository_link:
        title: "\u0421\u0441\u044B\u043B\u043A\u0430 \u043D\u0430 \u0440\u0435\u043F\
          \u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439"
        type: string
        format: uri
        maxLength: 300
        x-nullable: true
      users:
        type: array
        items:
          type: string
        uniqueItems: true
  ToDo:
    required:
      - text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      project_name:
        title: Project name
        type: string
        readOnly: true
      text:
        title: "\u0421\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435"
        type: string
        minLength: 1
      created:
        title: "\u0421\u043E\u0437\u0434\u0430\u043D\u043E"
        type: string
        format: date-time
        readOnly: true
      updated:
        title: "\u041E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u043E"
        type: string
        format: date-time
        readOnly: true
      user:
        title: User
        type: string
        readOnly: true
      is_done:
        title: Is done
        type: string
        readOnly: true
  User:
    required:
      - username
      - email
    type: object
    properties:
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      username:
        title: "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\
          \u0442\u0435\u043B\u044F"
        description: "\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\
          \u043E\u0435 \u043F\u043E\u043B\u0435. \u041D\u0435 \u0431\u043E\u043B\u0435\
          \u0435 150 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432. \u0422\u043E\
          \u043B\u044C\u043A\u043E \u0431\u0443\u043A\u0432\u044B, \u0446\u0438\u0444\
          \u0440\u044B \u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u044B @/./+/-/_."
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      first_name:
        title: "\u0418\u043C\u044F"
        type: string
        maxLength: 150
      last_name:
        title: "\u0424\u0430\u043C\u0438\u043B\u0438\u044F"
        type: string
        maxLength: 150
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
